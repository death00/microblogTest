package cn.cslg.microblog.PO;

import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.sun.javafx.collections.MappingChange.Map;

public class Microblog {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column microblog.id
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 这条微博现在属于的作者
     */
    private User user;
    
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column microblog.userId
     * 这条微博现在属于谁
     * @mbggenerated
     */
    private Integer userid;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column microblog.content
     *
     * @mbggenerated
     */
    private String content;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column microblog.time
     * 这条微博现在发布的时间
     * @mbggenerated
     */
    private Date  time;
    
    /**
     * 这条微博是否是转载的，是转载的为true，否则为false
     */
    private Boolean isForward;
    
    /**
     * 这条博客的原创博客的id(原创的话即为0)
     */
    private Integer sourceMicroblogId;
    
    /**
     * 原创微博
     */
    private Microblog sourceMicroblog;
    
    /**
     * 你转发的那条微博（不一定是原创的那一条，原创的话即为0）
     */
    private Integer forwardMicroblogId;

    /**
     * 转发这条微博时所带有的评论（如果是转发的就有，如果是自己写的就没有）
     */
    private String forwardRemark;
    
    /**
     * 本条微博所带有的转发评论（将之前的forwardRemark进行逻辑处理后得到）
     */
    private List<ForwardRemark> forwardRemarks;
    
    /**
     * 本条微带有的所有下方评论
     */
    private List<Remark> remarks;
    
    /**
     * 转发数量
     */
    private Integer forwards;

    public Integer getForwards() {
		return forwards;
	}

	public void setForwards(Integer forwards) {
		this.forwards = forwards;
	}

	public Integer getSourceMicroblogId() {
		return sourceMicroblogId;
	}

	public void setSourceMicroblogId(Integer sourceMicroblogId) {
		this.sourceMicroblogId = sourceMicroblogId;
	}

	public Integer getForwardMicroblogId() {
		return forwardMicroblogId;
	}

	public void setForwardMicroblogId(Integer forwardMicroblogId) {
		this.forwardMicroblogId = forwardMicroblogId;
	}

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getUserid() {
        return userid;
    }

    public void setUserid(Integer userid) {
        this.userid = userid;
    }

    public String getContent() {
    	String[] temp = content.split("");
        return content;
    }

    public void setContent(String content) {
        this.content = content == null ? null : content.trim();
    }

    public Date getTime() {
        return time;
    }

    public void setTime(Date time) {
        this.time = time;
    }

	public String getForwardRemark() {
		return forwardRemark;
	}

	public void setForwardRemark(String forwardRemark) {
		this.forwardRemark = forwardRemark;
	}

	public List<ForwardRemark> getForwardRemarks() {
		return forwardRemarks;
	}

	public void setForwardRemarks(List<ForwardRemark> forwardRemarks) {
		this.forwardRemarks = forwardRemarks;
	}

	public List<Remark> getRemarks() {
		return remarks;
	}

	public void setRemarks(List<Remark> remarks) {
		this.remarks = remarks;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Boolean getIsForward() {
		return isForward;
	}

	public void setIsForward(Boolean isForward) {
		this.isForward = isForward;
	}

	public Microblog getSourceMicroblog() {
		return sourceMicroblog;
	}

	public void setSourceMicroblog(Microblog sourceMicroblog) {
		this.sourceMicroblog = sourceMicroblog;
	}

	/**
	 * 获取正常的日期格式
	 * @return
	 */
	public String getNTime(){
    	DateFormat sdf = new SimpleDateFormat("yyyy年MM月dd日HH:mm:ss"); 
    	String s = sdf.format(time);
    	return s;
    }
	
	public void setRemarkSys(){
		if(this.forwardRemark != null){
			String[] temp = this.forwardRemark.split("##\\$\\$");
			this.forwardRemark = temp[0];
			if(temp.length > 1){
				this.forwardRemarks = new ArrayList<ForwardRemark>();
				for(int i=1;i<temp.length;i++){
					String s = temp[i];
					String[] temp2 = s.split("#\\$");
					ForwardRemark forwardRemark2 = new ForwardRemark();
					forwardRemark2.setUserId(Integer.parseInt(temp2[0]));
					forwardRemark2.setUserName(temp2[1]);
					forwardRemark2.setRemark(temp2[2]);
					this.forwardRemarks.add(forwardRemark2);
				}
			}
		}
	}
}